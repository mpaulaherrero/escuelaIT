@startuml connect4_constructorFunction_classdiagram

package "console-mpds" <<Rectangle>> #ccc {
    class console {
        writeln(text)
        readString(question)
        readNumber(question)
    }
}

package "Types" <<Rectangle>> #aca {
    class Coordinate {
        {static} MIN_COLUMNS
        {static} MAX_COLUMNS
        {static} MAX_ROWS
        -row
        -column
        constructor(row, column)
        shifted(coordinate)
        toString()
        isValid()
        getOposite()
        getRow()
        getColumn()
        setRow(value)
        setColumn(value)
    }

    class Direction {
        {static} NORTH
        {static} NORTH_EAST
        {static} EAST
        {static} SOUTH_EAST
        -name
        -coordinate
        constructor(name, coordinate)
        {static} getValues()
        toString()
        getOpositeCoordinate()
        getCoordinate()
    }

    class Color {
        {static} RED
        {static} YELLOW
        {static} NULL
        -string;
        constructor(string) 
        getCode()
        {static} values()
        {static} get(ordinal)
    }    
}    

package "Model" <<Rectangle>> #aca {

    class Board {
        -tokens
        -lastCoordinate
        constructor()
        getMaxRows()
        getMaxColumns()
        getLastCoordinate()
        getToken(row, column)
        isLastCoordinateColumnEmpty()
        putLastCoordinate(token)
        isComplete()
        isLastTokenInLine()
        isInLine(line)
    }

    class Game {
        -board
        -turn
        constructor(numPlayers)
        getBoard()
        getTurn()
        isFinished()
        isWinner()
        getWinnerToken()
        nextTurn()
    }

    class Line {
        {static} LENGTH
        -direction
        -coordinates
        toString()
        shift()
        getCoordinates()
    }

    class Player{
        -color
        constructor(indexColor)
        getColor()
    }

    class UserPlayer extends Player{
        constructor(color)
        accept(visitor) 
    }

    class MachinePlayer extends Player{
        turn
        constructor(color,turn)
        accept(visitor)    
        getColumn()
    }    

    class RandomMachinePlayer extends MachinePlayer{
        constructor(color,turn)
        accept(visitor)    
        getColumn()
    }  

    class Turn{
        {static} NUMBER_PLAYERS
        -board
        -players
        -activePlayer
        constructor(board, numOfPlayers)
        next()
        getToken()
        getActivePlayer()
        isCoordinateColumnEmpty()
        getCoordinate()
        putCoordinate()
    }
}

package "Views" <<Rectangle>> #caa {
    class BoardView{
        -board
        -console
        constructor(board,console)
        writeTokens()
    }

    class Connect4View {
        -continueDialog
        -numPlayersMenu
        -console
        constructor()
        play()
    }

    class CoordinateView {
        -coordinate
        -console
        constructor(coordinate, console)
        -read(title)
        readColumn()
    }

    class GameView {
        -game
        -boardView
        -turnView
        -console
        constructor(numPlayers, console)
        writeFinish()
        play()
    }

    class TurnView {
        -turn
        -console
        constructor(turn, console) 
        playTurn()
        getColumn()
        visitUserPlayer()
        visitMachinePlayer(machinePlayer)
    }

    class YesNoDialog {
        -question
        -answer
        -console
        constructor(question, console)
        read()
        isAffirmative()
        isNegative()
    }

    class Option {
        -title
        -value
        constructor(title, value) 
        getValue()
        getTitle()
    }

    class Menu {
        -console
        -title
        -options
        -answer
        constructor(title, console)
        add(option)
        interact()
        show()
        -showTitle()
        execChoosedOption()
        -readInt(prompt)
        getChoosedOptionValue()
    }

    class NumPlayersMenu extends Menu {
        constructor(console)
        read()
    }

}



Coordinate -> Coordinate

Direction *-down-> Coordinate

Line -down-> "4" Coordinate
Line -down-> Direction

Board *-down-> Coordinate
Board -down-> Direction
Board *-down-> Line
Board -down-> Color

Player -down-> Color

MachinePlayer --> Turn

Turn *-down-> "2" Player
Turn -down-> Board

Game *-down-> Board
Game *-down-> Turn

CoordinateView -> Coordinate

BoardView -down-> Board

TurnView -down-> Turn
TurnView *-down-> CoordinateView
TurnView .-> MachinePlayer

GameView *-down-> Game
GameView *-down-> BoardView
GameView *-down-> TurnView

Connect4View -down-> YesNoDialog
Connect4View -down-> NumPlayersMenu
Connect4View *-down-> GameView

Menu --> Option
NumPlayersMenu *-down-> Option

Connect4View *-down-> console
YesNoDialog .-l-> console
GameView .-l-> console
BoardView .-l-> console
TurnView .-l-> console
CoordinateView .-l-> console
Menu .-l-> console

@enduml